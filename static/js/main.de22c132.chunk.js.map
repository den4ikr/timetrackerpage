{"version":3,"sources":["components/Header/index.jsx","components/Input/InputStyle.js","components/Input/index.jsx","components/ListItem/ListItemStyle.js","components/ListItem/index.jsx","constants.js","components/List/ListStyle.js","components/List/index.jsx","redux/actions/main-action.js","App.js","reportWebVitals.js","redux/reducers/main-reducer.js","redux/redux-store.js","index.js"],"names":["Header","AppBar","position","Toolbar","Typography","useStyles","makeStyles","inputBlock","margin","InputComponent","props","style","className","Input","onChange","fullWidth","placeholder","value","card","mainRow","display","alignItems","justifyContent","subRow","ListItem","useState","showPause","setShowPause","started","setStarted","intervalId","useRef","useEffect","startTimer","stateSeconds","time","slice","stateMinutes","substring","stateHours","startTimestamp","moment","hours","minutes","seconds","current","setInterval","add","updateTime","id","format","Card","backgroundColor","CardContent","color","text","IconButton","onClick","clearInterval","removeNote","SET_NOTES","ADD_NOTE","REMOVE_NOTE","UPDATE_TIME","root","padding","width","input","flex","iconButton","divider","height","connect","state","notes","main","addNote","type","payload","query","setQuery","createNote","length","Date","now","Paper","component","onSubmit","e","target","map","note","counter","setCounter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","filter","Object","assign","persistedState","serializedState","localStorage","getItem","JSON","parse","err","console","log","loadFromLocalStorage","store","createStore","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de22c132.chunk.js","sourcesContent":["import { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography>Time Tracker</Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  inputBlock: {\r\n    margin: \"20px 10px 0px 10px\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import Input from \"@material-ui/core/Input\";\r\nimport useStyles from \"./InputStyle\";\r\n\r\nexport const InputComponent = (props) => {\r\n  const style = useStyles();\r\n\r\n  return (\r\n    <div className={style.inputBlock}>\r\n      <Input\r\n        onChange={props.onChange}\r\n        fullWidth\r\n        placeholder={props.placeholder}\r\n        value={props.value}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    margin: \"30px 10px 0px 10px\",\r\n  },\r\n  mainRow: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  subRow: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport { Card, CardContent, IconButton, Typography } from \"@material-ui/core\";\r\nimport useStyles from \"./ListItemStyle\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport moment from \"moment\";\r\n\r\nexport const ListItem = (props) => {\r\n  const [showPause, setShowPause] = useState(false);\r\n  const [started, setStarted] = useState(true);\r\n  let intervalId = useRef(null);\r\n  const style = useStyles();\r\n\r\n  useEffect(() => {\r\n    startTimer();\r\n  }, []);\r\n\r\n  const deleteNote = () => {\r\n    props.removeNote(props.id);\r\n  };\r\n\r\n  function startTimer() {\r\n    let stateSeconds = props.time.slice(-2);\r\n    let stateMinutes = props.time.substring(3, 5);\r\n    let stateHours = props.time.substring(0, 2);\r\n    let startTimestamp = moment()\r\n      .hours(stateHours)\r\n      .minutes(stateMinutes)\r\n      .seconds(stateSeconds);\r\n    intervalId.current = setInterval(function () {\r\n      startTimestamp.add(1, \"second\");\r\n      props.updateTime(props.id, startTimestamp.format(\"HH:mm:ss\"));\r\n    }, 1000);\r\n    setShowPause(true);\r\n    setStarted(true);\r\n  }\r\n\r\n  function stopTimer() {\r\n    clearInterval(intervalId.current);\r\n    setShowPause(false);\r\n    setStarted(false);\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      className={style.card}\r\n      style={{ backgroundColor: started ? \"#FDFDF6\" : \"#fff\" }}\r\n    >\r\n      <CardContent>\r\n        <div className={style.mainRow}>\r\n          <Typography style={{ color: started ? \"#3FAF6C\" : \"#000\" }}>\r\n            {props.text}\r\n          </Typography>\r\n          <div className={style.subRow}>\r\n            <div>{props.time}</div>\r\n            {showPause ? (\r\n              <IconButton onClick={stopTimer}>\r\n                <PauseIcon color=\"primary\" />\r\n              </IconButton>\r\n            ) : (\r\n              <IconButton onClick={startTimer}>\r\n                <PlayArrowIcon color=\"primary\" />\r\n              </IconButton>\r\n            )}\r\n            <IconButton onClick={deleteNote}>\r\n              <DeleteIcon color=\"secondary\" />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","export const SET_NOTES = \"SET_NOTES\"\r\nexport const ADD_NOTE = \"ADD_NOTE\"\r\nexport const REMOVE_NOTE = \"REMOVE_NOTE\"\r\nexport const UPDATE_TIME = \"UPDATE_TIME\"\r\nexport const SET_COUNTER  = \"SET_COUNTER\"","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  inputBlock: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    margin: \"35px 10px 0px 10px\",\r\n  },\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  input: {\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { InputComponent } from \"../Input\";\r\nimport { ListItem } from \"../ListItem\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport {\r\n  addNote,\r\n  removeNote,\r\n  updateTime,\r\n} from \"../../redux/actions/main-action\";\r\nimport { IconButton, Paper } from \"@material-ui/core\";\r\nimport useStyles from \"./ListStyle\";\r\n\r\nconst List = (props) => {\r\n  const style = useStyles();\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n  const createNote = () => {\r\n    if (query.length === 0) {\r\n      props.addNote(Date.now(), Date.now(), \"00:00:00\", 0);\r\n    } else {\r\n      props.addNote(Date.now(), query, \"00:00:00\", 0);\r\n    }\r\n    setQuery(\"\");\r\n  };\r\n  const onChangeHandler = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={style.mainRow}>\r\n      <div className={style.inputBlock}>\r\n        <Paper component=\"form\" className={style.root} onSubmit={createNote}>\r\n          <div className={style.input}>\r\n            <InputComponent\r\n              placeholder=\"Enter your note\"\r\n              value={query}\r\n              onChange={onChangeHandler}\r\n            />\r\n          </div>\r\n          <IconButton className={style.iconButton} onClick={createNote}>\r\n            <PlayArrowIcon />\r\n          </IconButton>\r\n        </Paper>\r\n      </div>\r\n\r\n      {props.notes.map((note) => {\r\n        return (\r\n          <ListItem\r\n            text={note.text}\r\n            key={note.id}\r\n            id={note.id}\r\n            time={note.time}\r\n            counter={note.counter}\r\n            removeNote={props.removeNote}\r\n            updateTime={props.updateTime}\r\n            setCounter={props.setCounter}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    notes: state.main.notes,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addNote, removeNote, updateTime })(\r\n  List\r\n);\r\n","import { SET_NOTES, ADD_NOTE, REMOVE_NOTE, UPDATE_TIME } from \"../../constants\";\r\n\r\nexport const setNotes = (notes) => ({\r\n  type: SET_NOTES,\r\n  notes,\r\n});\r\n\r\nexport const addNote = (id, text, time) => {\r\n  return {\r\n    type: ADD_NOTE,\r\n    payload: { id, text, time },\r\n  };\r\n};\r\n\r\nexport const removeNote = (id) => ({\r\n  type: REMOVE_NOTE,\r\n  id,\r\n});\r\n\r\nexport const updateTime = (id, time) => {\r\n  return {\r\n    type: UPDATE_TIME,\r\n    id,\r\n    time,\r\n  };\r\n};\r\n","import \"./App.css\";\nimport { Header } from \"./components/Header\";\nimport List from \"./components/List\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n        <List />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_NOTE, REMOVE_NOTE, SET_NOTES, UPDATE_TIME } from \"../../constants\";\r\n\r\nconst initialState = {\r\n  notes: [\r\n    { id: 1, text: \"Note 1\", time: \"00:00:00\", counter: 0 },\r\n    { id: 2, text: \"Note 2\", time: \"00:00:00\", counter: 0 },\r\n  ],\r\n};\r\n\r\nexport const MainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_NOTES:\r\n      return { ...state, notes: action.notes };\r\n    case ADD_NOTE: {\r\n      return {\r\n        ...state,\r\n        notes: [action.payload, ...state.notes],\r\n      };\r\n    }\r\n    case REMOVE_NOTE:\r\n      return {\r\n        ...state,\r\n        notes: [...state.notes.filter((note) => note.id !== action.id)],\r\n      };\r\n    case UPDATE_TIME:\r\n      return Object.assign({}, state, {\r\n        notes: state.notes.map((note) => {\r\n          if (note.id !== action.id) {\r\n            return note;\r\n          }\r\n\r\n          return Object.assign({}, note, {\r\n            time: action.time,\r\n          });\r\n        }),\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { MainReducer } from \"./reducers/main-reducer\";\r\n\r\nconst saveToLocalStorage = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst loadFromLocalStorage = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) return undefined;\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    console.log(err);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  main: MainReducer,\r\n});\r\n\r\nconst persistedState = loadFromLocalStorage();\r\nexport const store = createStore(rootReducer, persistedState);\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./redux/redux-store\"\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store} >\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}